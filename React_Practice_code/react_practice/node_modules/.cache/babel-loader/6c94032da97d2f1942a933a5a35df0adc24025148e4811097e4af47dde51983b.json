{"ast":null,"code":"var _jsxFileName = \"/home/sameed/Desktop/React_NotesPractice/React_Practice_code/react_practice/src/LiftingStates.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function BoilingVerdict(props) {\n  if (props.celsius) {\n    if (props.celsius >= 100) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"The water would boil.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 20\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"The water would not boil.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Enter a Value to find out!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 16\n    }, this);\n  }\n}\n_c = BoilingVerdict;\nexport class Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      temperature: ''\n    };\n  }\n  handleChange(e) {\n    this.setState({\n      temperature: e.target.value\n    });\n  }\n  render() {\n    const temperature = this.state.temperature;\n    return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n        children: \"Enter temperature in Celsius:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: temperature,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BoilingVerdict, {\n        celsius: parseFloat(temperature)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"BoilingVerdict\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","BoilingVerdict","props","celsius","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Calculator","Component","constructor","handleChange","bind","state","temperature","e","setState","target","value","render","onChange","parseFloat","$RefreshReg$"],"sources":["/home/sameed/Desktop/React_NotesPractice/React_Practice_code/react_practice/src/LiftingStates.js"],"sourcesContent":["import React from 'react';\n\n\nexport function BoilingVerdict(props) {\n\n    if(props.celsius){\n        if (props.celsius >= 100) {\n            return <p>The water would boil.</p>;\n        }\n        return <p>The water would not boil.</p>;\n    }\n    else{\n        return <p> Enter a Value to find out!</p>;\n    }\n}\n\nexport class Calculator extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.state = {temperature: ''};\n    }\n\n    handleChange(e) {\n        this.setState({temperature: e.target.value});\n    }\n\n    render() {\n        const temperature = this.state.temperature;\n        return (\n            <fieldset>\n                <legend>Enter temperature in Celsius:</legend>\n                <input\n                    value={temperature}\n                    onChange={this.handleChange} />\n                <BoilingVerdict\n                    celsius={parseFloat(temperature)} />\n            </fieldset>\n        );\n    }\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1B,OAAO,SAASC,cAAcA,CAACC,KAAK,EAAE;EAElC,IAAGA,KAAK,CAACC,OAAO,EAAC;IACb,IAAID,KAAK,CAACC,OAAO,IAAI,GAAG,EAAE;MACtB,oBAAOH,OAAA;QAAAI,QAAA,EAAG;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IACvC;IACA,oBAAOR,OAAA;MAAAI,QAAA,EAAG;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC3C,CAAC,MACG;IACA,oBAAOR,OAAA;MAAAI,QAAA,EAAG;IAA2B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC7C;AACJ;AAACC,EAAA,GAXeR,cAAc;AAa9B,OAAO,MAAMS,UAAU,SAASZ,KAAK,CAACa,SAAS,CAAC;EAC5CC,WAAWA,CAACV,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACW,YAAY,GAAG,IAAI,CAACA,YAAY,CAACC,IAAI,CAAC,IAAI,CAAC;IAChD,IAAI,CAACC,KAAK,GAAG;MAACC,WAAW,EAAE;IAAE,CAAC;EAClC;EAEAH,YAAYA,CAACI,CAAC,EAAE;IACZ,IAAI,CAACC,QAAQ,CAAC;MAACF,WAAW,EAAEC,CAAC,CAACE,MAAM,CAACC;IAAK,CAAC,CAAC;EAChD;EAEAC,MAAMA,CAAA,EAAG;IACL,MAAML,WAAW,GAAG,IAAI,CAACD,KAAK,CAACC,WAAW;IAC1C,oBACIhB,OAAA;MAAAI,QAAA,gBACIJ,OAAA;QAAAI,QAAA,EAAQ;MAA6B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC9CR,OAAA;QACIoB,KAAK,EAAEJ,WAAY;QACnBM,QAAQ,EAAE,IAAI,CAACT;MAAa;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnCR,OAAA,CAACC,cAAc;QACXE,OAAO,EAAEoB,UAAU,CAACP,WAAW;MAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAEnB;AACJ;AAAC,IAAAC,EAAA;AAAAe,YAAA,CAAAf,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}