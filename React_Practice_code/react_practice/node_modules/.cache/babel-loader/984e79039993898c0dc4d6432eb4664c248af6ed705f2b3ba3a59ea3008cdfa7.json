{"ast":null,"code":"var _jsxFileName = \"/home/sameed/Desktop/React_NotesPractice/React_Practice_code/react_practice/src/RenderingArrays.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function NumberListMap(props) {\n  const numbers = props.numbers;\n  const listItems = numbers.map(number => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [number, \" x \", props.n, \" = \", number * 2]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: listItems\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\n_c = NumberListMap;\nexport function ConditionalRenderingArray(props) {\n  const numbers = props.numbers;\n  for (let i = 0; i < numbers.length; i++) {\n    if (numbers[i] % 2 == 0) {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\" \", numbers[i], \" is Even!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\" \", numbers[i], \" is Odd!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 20\n      }, this);\n    }\n  }\n}\n_c2 = ConditionalRenderingArray;\nvar _c, _c2;\n$RefreshReg$(_c, \"NumberListMap\");\n$RefreshReg$(_c2, \"ConditionalRenderingArray\");","map":{"version":3,"names":["NumberListMap","props","numbers","listItems","map","number","_jsxDEV","children","n","fileName","_jsxFileName","lineNumber","columnNumber","_c","ConditionalRenderingArray","i","length","_c2","$RefreshReg$"],"sources":["/home/sameed/Desktop/React_NotesPractice/React_Practice_code/react_practice/src/RenderingArrays.js"],"sourcesContent":["\nexport function NumberListMap(props) {\n\n    const numbers = props.numbers;\n    const listItems = numbers.map((number) =>\n        <li>{number} x {props.n} = {number*2}</li>\n    );\n    return (\n        <ul>{listItems}</ul>\n    );\n}\n\n export function ConditionalRenderingArray(props){\n\n    const numbers = props.numbers;\n\n    for(let i = 0;i<numbers.length; i++){\n\n        if(numbers[i]%2 == 0){\n            return <h1> {numbers[i]} is Even!</h1>\n        }\n        else{\n            return <h1> {numbers[i]} is Odd!</h1>\n\n        }\n    }\n\n}\n\n\n\n\n"],"mappings":";;AACA,OAAO,SAASA,aAAaA,CAACC,KAAK,EAAE;EAEjC,MAAMC,OAAO,GAAGD,KAAK,CAACC,OAAO;EAC7B,MAAMC,SAAS,GAAGD,OAAO,CAACE,GAAG,CAAEC,MAAM,iBACjCC,OAAA;IAAAC,QAAA,GAAKF,MAAM,EAAC,KAAG,EAACJ,KAAK,CAACO,CAAC,EAAC,KAAG,EAACH,MAAM,GAAC,CAAC;EAAA;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAC7C,CAAC;EACD,oBACIN,OAAA;IAAAC,QAAA,EAAKJ;EAAS;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAE5B;AAACC,EAAA,GATeb,aAAa;AAW5B,OAAO,SAASc,yBAAyBA,CAACb,KAAK,EAAC;EAE7C,MAAMC,OAAO,GAAGD,KAAK,CAACC,OAAO;EAE7B,KAAI,IAAIa,CAAC,GAAG,CAAC,EAACA,CAAC,GAACb,OAAO,CAACc,MAAM,EAAED,CAAC,EAAE,EAAC;IAEhC,IAAGb,OAAO,CAACa,CAAC,CAAC,GAAC,CAAC,IAAI,CAAC,EAAC;MACjB,oBAAOT,OAAA;QAAAC,QAAA,GAAI,GAAC,EAACL,OAAO,CAACa,CAAC,CAAC,EAAC,WAAS;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAC1C,CAAC,MACG;MACA,oBAAON,OAAA;QAAAC,QAAA,GAAI,GAAC,EAACL,OAAO,CAACa,CAAC,CAAC,EAAC,UAAQ;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAEzC;EACJ;AAEJ;AAACK,GAAA,GAfgBH,yBAAyB;AAAA,IAAAD,EAAA,EAAAI,GAAA;AAAAC,YAAA,CAAAL,EAAA;AAAAK,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}